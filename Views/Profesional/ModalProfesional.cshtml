@model BackendPortal.Models.VM.ProfesionalVM

@{
    string identif = "Modal";
    string rutaImg = System.Configuration.ConfigurationManager.AppSettings["DIR_REPOSITORIO_URL"] + @"Profesionales\" + Model.profesional.picture;
}

<div class="modal-dialog modal-xlg">
    <div class="modal-content">
        <form id="ProfesionalForm" onsubmit="GuardarProfesional(); return false;" enctype="multipart/form-data">
            @Html.HiddenFor(model => model.modo)
            @Html.HiddenFor(model => model.titulo)
            @Html.HiddenFor(model => model.profesional.id)
            @Html.HiddenFor(model => model.profesional.AreasPracticas, new { id = "hAreasPracticas" + identif, @class = "IncludeHidden" })
            @Html.HiddenFor(model => model.profesional.Idiomas, new { id = "hIdiomas" + identif, @class = "IncludeHidden" })
            @Html.HiddenFor(model => model.profesional.kind, new { id = "hRol" + identif, @class = "IncludeHidden" })
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">@Model.titulo</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="contenedorFoto">
                                <label>Foto</label>
                                <center>
                                    <div style="margin-top:10px;">
                                        @if (!string.IsNullOrEmpty(Model.profesional.picture) && BackendPortal.Controllers.BaseController.ExisteUrl(rutaImg))
                                        {
                                            <img id="imgPicture" src="@{@rutaImg}" class="imgFoto" />
                                        }
                                        else
                                        {
                                            <img id="imgPicture" src="~/Images/imgNoDisp.png" class="imgFoto" />
                                        }
                                    </div>
                                </center>
                                <div style="margin-top:10px;">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.profesional.picture, new { htmlAttributes = new { @class = "form-control input-sm ta-coment", id = "filenamePicture", name = "", @readonly = "readonly" } })
                                        <span class="input-group-btn">
                                            <span class="btn btn-default btn-file btn-sm">
                                                Buscar…
                                                @Html.TextBoxFor(model => model.profesional.PictureUpload, new { type = "file", id = "inputFilePicture", name = "", @class = "nodisplay", onchange = "SetNameFile('inputFilePicture'); readURL(this, 'imgPicture');" })
                                            </span>
                                        </span>
                                    </div>
                                    <center>
                                        <div style="margin-top:10px;">
                                            <button type="button" class="btn btn-sm btn-default" onclick="BorrarPictureProfesional();">Limpiar</button>
                                        </div>
                                    </center>
                                    <div id="divFormatoFotoIncorrecto" class="hidden" style="margin-top:10px;">
                                        <span class="field-validation-error">Formato de archivo incorrecto.</span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.profesional.picture)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="row">
                                <div class="col-md-5">
                                    <label>Apellido *</label>
                                    @Html.EditorFor(model => model.profesional.last_name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.profesional.last_name)

                                </div>
                                <div class="col-md-5">
                                    <label>Nombre *</label>
                                    @Html.EditorFor(model => model.profesional.first_name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.profesional.first_name)
                                </div>
                                <div class="col-md-2">
                                </div>
                            </div>
                            <div class="row" style="margin-top:15px;">
                                <div class="col-md-5">
                                    <label>Email *</label>
                                    @Html.EditorFor(model => model.profesional.email, new { htmlAttributes = new { type = "email", @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.profesional.email)
                                </div>
                                <div class="col-md-5">
                                    <label for="inputFile">VCard (*.vcf)</label>
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.profesional.vcard, new { htmlAttributes = new { @class = "form-control input-sm ta-coment", id = "filenameVCard", name = "", @readonly = "readonly" } })
                                        <span class="input-group-btn">
                                            <span class="btn btn-default btn-file btn-sm">
                                                Buscar…
                                                @Html.TextBoxFor(model => model.profesional.VCardUpload, new { type = "file", id = "inputFileVCard", name = "", @class = "nodisplay", onchange = "SetNameFile('inputFileVCard')" })
                                            </span>
                                        </span>
                                    </div>
                                    <div id="divFormatoVCardIncorrecto" class="hidden" style="margin-top:10px;">
                                        <span class="field-validation-error">Formato de archivo incorrecto.</span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.profesional.vcard)
                                </div>
                                <div class="col-md-2">
                                    <button type="button" class="btn btn-sm btn-default" style="margin-top:19px;" onclick="BorrarInputFile('inputFileVCard');">Limpiar</button>
                                </div>
                            </div>
                            <div class="row" style="margin-top:15px;">
                                <div class="col-md-5">
                                    <label>Teléfono *</label>
                                    @Html.EditorFor(model => model.profesional.phone, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.profesional.phone)
                                </div>
                                <div class="col-md-5" style="margin-top:5px;">
                                    <label>Fecha de Ingreso</label>
                                    <div class="input-group date">
                                        @Html.EditorFor(model => model.profesional.entry_date, new { htmlAttributes = new { @class = "form-control input-sm", id = "DatePickerFechaIngreso", @readonly = "readonly" } })
                                        <div class="input-group-addon input-sm dtp-sm">
                                            <span id="datepicker" class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-top:15px;">
                                <div class="col-md-5">
                                    <label>Iniciales (Sincronización datos) *</label>
                                    @Html.EditorFor(model => model.profesional.initials, new { htmlAttributes = new { @class = "form-control input-sm", style = "max-width: 100px" } })
                                    @Html.ValidationMessageFor(model => model.profesional.initials)
                                </div>
                                <div class="col-md-2">
                                    <label>Orden</label>
                                    @Html.EditorFor(model => model.profesional.view_order, new { htmlAttributes = new { @class = "form-control input-sm", style = "max-width: 100px" } })
                                    @Html.ValidationMessageFor(model => model.profesional.view_order)
                                </div>
                                <div class="col-md-4">
                                    <label>Género *</label>
                                    <div style="margin-top:5px;">
                                        <div style="display:inline-block;">
                                            @Html.RadioButtonFor(model => model.profesional.gender, "M") Masculino
                                        </div>
                                        <div style="display:inline-block; margin-left:4px;">
                                            @Html.RadioButtonFor(model => model.profesional.gender, "F") Femenino
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.profesional.gender)
                                </div>
                                <div class="col-md-2">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2"></div>
                    </div>
                </div>
                <div class="form-group" style="margin-top:25px;">
                    <div class="row">
                        <div class="col-md-5">
                            <label>Áreas de Práctica</label>
                            <div id="pnlAreasPracticas@{@identif}">
                                <img src="~/Images/loading.gif" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label>LinkedIn</label>
                            @Html.EditorFor(model => model.profesional.LinkedIn, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3">
                            <label>Rol *</label>
                            <div id="pnlRol@{@identif}">
                                <img src="~/Images/loading.gif" />
                            </div>
                            @Html.ValidationMessageFor(model => model.profesional.kind)
                        </div>
                        <div class="col-md-3">
                            <label>Empresa</label>
                            @Html.EditorFor(model => model.profesional.Empresa, new { htmlAttributes = new { @class = "form-control input-sm", @disabled = "disabled" } })
                        </div>
                        <div class="col-md-3">
                            <label>Cargo</label>
                            @Html.EditorFor(model => model.profesional.Cargo, new { htmlAttributes = new { @class = "form-control input-sm", @disabled = "disabled" } })
                        </div>
                        <div class="col-md-3">
                            <label>Link personal</label>
                            @Html.EditorFor(model => model.profesional.LinkPersonal, new { htmlAttributes = new { @class = "form-control input-sm" , @disabled = "disabled" } })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="margin-top:25px;">
                    <div class="row">
                        <div class="col-md-5">
                            <label>Idiomas</label>
                            <div id="pnlIdiomas@{@identif}">
                                <img src="~/Images/loading.gif" />
                            </div>
                        </div>
                        <div class="col-md-7"></div>
                    </div>
                    <div class="form-group">
                        <div class="row" style="margin-top:10px;">
                            <div class="col-md-12">
                                <label>CV (es)</label>
                                @Html.TextAreaFor(model => model.profesional.cv_es, new { @class = "ckeditor form-control wmax input-sm", @Style = "height: 250px" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row" style="margin-top:10px;">
                            <div class="col-md-12">
                                <label>CV (en)</label>
                                @Html.TextAreaFor(model => model.profesional.cv_en, new { @class = "ckeditor form-control wmax input-sm", @Style = "height: 250px" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="BorrarFormularioProfesional();">Limpiar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                <button type="submit" class="btn btn-primary">Guardar</button>
            </div>
        </form>
    </div>
</div>
<div id="AlertsModal">
</div>
<div id="AlertsCombo">
</div>

@Scripts.Render("~/bundles/jqueryval")

@Scripts.Render("~/bundles/datepicker")
@Styles.Render("~/Content/datepicker")

<script>
    $(document).ready(function () {
        InicializarCKEDITOR("profesional_cv_en");
        InicializarCKEDITOR("profesional_cv_es");
        InicializarDatePickers();
    });
</script>