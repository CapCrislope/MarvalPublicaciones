@model DistribucionUtilidades.Models.VM.ValidacionImportesVM

<div id="Alerts_ValidacionImportes"></div>

<div class="row mb-3">
    <div class="col-md-12">
        <div>
            @{
                if (ViewBag.TipoProceso == 1)
                {
                    <h3>Validación de importes (Proceso Real)</h3>
                }
                else
                {
                    <h3 style="color:#ff6a00">Validación de importes (Proceso Provisorio)</h3>
                }
            }
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-12">
        @{
            if (ViewBag.TipoProceso == 1)
            {
                <p class="leyenda">Revise los importes asignados a cada socio y ex socio y apruébelos o rechácelos, según corresponda.</p>
            }
            else
            {
                <p class="leyenda">Revise los importes estimados para cada socio y ex socio y apruébelos o rechácelos, según corresponda.</p>
            }
        }
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <table id="ImportesSocioTable" class="table">
            <thead class="thead-dark">
                <tr>
                    <th width="70%" scope="col">Socio/Ex-Socio</th>
                    <th width="20%" scope="col">Importe</th>
                    <th width="10%"></th>
                </tr>
            </thead>
            <tbody>
                @{
                    var cont = 0;

                    if (Model.Socios.Count > 0)
                    {
                        for (int i = 0; i < Model.Socios.Count; i++)
                        {

                            <tr id="@Model.Socios[i].PersonaId" data-type="Socio">
                                <td>@Model.Socios[i].Socio</td>
                                <td>
                                    <div>
                                        @Html.EditorFor(model => Model.Socios[i].Importe, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", @readonly = "readonly", @Id = "Importe_" + Model.Socios[i].PersonaId + "", @pattern = "[0-9]*", @data_politespace = "", @data_politespace_prefix = "$ ", @data_politespace_reverse = "" } })

                                    </div>

                                </td>
                                <td></td>
                            </tr>

                            cont = cont + 1;
                        }
                    }

                    <tr id="totalSocios" class="table-info">
                        <td>Total socios (@cont)</td>
                        <td>
                            <div>
                                @Html.EditorFor(model => model.TotalSocios, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", @readonly = "readonly", @id = "Importe_TotalSocios", @pattern = "[0-9]*", @data_politespace = "", @data_politespace_prefix = "$ ", @data_politespace_reverse = "" } })

                            </div>
                        </td>
                        <td></td>
                    </tr>

                    cont = 0;

                    if (Model.ExSocios.Count > 0)
                    {

                        for (int i = 0; i < Model.ExSocios.Count; i++)
                        {

                            <tr id="@Model.ExSocios[i].PersonaId" data-type="ExSocio">
                                <td>@Model.ExSocios[i].Socio</td>
                                <td>
                                    <div>
                                        @Html.EditorFor(model => Model.ExSocios[i].Importe, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", @readonly = "readonly", @Id = "Importe_" + Model.ExSocios[i].PersonaId + "", @pattern = "[0-9]*", @data_politespace = "", @data_politespace_prefix = "$ ", @data_politespace_reverse = "" } })

                                    </div>

                                </td>
                            </tr>

                            cont = cont + 1;
                        }
                    }

                    <tr id="totalExSocios" class="table-info">
                        <td>Total ExSocios (@cont)</td>
                        <td>
                            @Html.EditorFor(model => model.TotalExSocios, new { htmlAttributes = new { @class = "form-control form-control-sm", disabled = "disabled", @readonly = "readonly", @id = "Importe_TotalExSocios", @pattern = "[0-9]*", @data_politespace = "", @data_politespace_prefix = "$ ", @data_politespace_reverse = "" } })
                        </td>
                        <td></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-1"></div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="text-center">
            <button type="button" class="btn btn-success btn-sm pl-3 pr-3 mt-5" onclick="AprobarImportes();">Aprobar</button>
            <button type="button" class="btn btn-danger btn-sm pl-3 pr-3 mt-5" onclick="ModalNotaRevision();">Rechazar</button>
        </div>
        
    </div>
</div>


<partial name="_ValidationScriptsPartial" />

<environment include="Development">
    <script src="~/js/ValidacionImportes.js" asp-append-version="true"></script>
</environment>
<environment exclude="Development">
    <script src="~/js/ValidacionImportes.min.js" asp-append-version="true"></script>
</environment>

<script type="text/javascript">

    $(document).ready(function () {

        $("input[data-politespace]").politespace();
    })

</script>